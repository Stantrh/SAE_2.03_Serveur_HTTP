Pour pouvoir afficher les images, j'ai du enlever le BufferedReader et utiliser un DataOutputStream qui lui lit les octets.
J'ai également du gérer le type de contenu dans l'en-tête que retourne le serveur au navigateur pour qu'il sache interpréter les images etc...

Pour ce qui est de la vérification des adresses

Etat du serveur :
J'ai utilisé Runtime.getRuntime().exec() pour lancer des commandes mais en fait la classe Runtime est obsolète donc je vais changer cela.

Fichiers :
Pour ce qui est de l'affichage du processus en cours (partie Fichiers), c'est tout simple avec : ProcessHandle.current().pid()
Source : https://stackoverflow.com/questions/35842/how-can-a-java-program-get-its-own-process-id?newreg=b5af3f0c982542778c5f06ac9b927824
Ainsi, pour changer les fichiers, il faudra changer le chemin du config.xml qui va donc être dans /etc/myweb/myweb.conf (Attention, l'extension a changé !)


Service :
https://doc.ubuntu-fr.org/creer_un_service_avec_systemd
Il faut changer l'attribut root pour qu'il amène au dossier des sources
Ensuite, il faut faire deux scripts : un Démarrage et un arrêt
Pour l'arrêt, je stocke simplement le contenu de mon fichier myweb.pid dans une variable
puis j'utilise la commande sur cette variable (Il faut être en sudo)
Pour le démarrage, je compile les sources qui sont dans le dossier myweb/
En revanche, on ne peut pas faire : java ./myweb/HTTPServer car la commande java va chercher dans le dossier courant un fichier nommé ./myweb/HTTPServer
Il faut donc lui ajouter une option -classpath sous cette forme : java -classpath directory_to_program Program (il faut être en sudo)
A la fin de cette étape, il faut bien évidemment changer l'attribut root dans le serveur car
Source : https://stackoverflow.com/questions/1190018/how-do-i-run-a-java-program-from-a-different-directory
J'ai eu une erreur avec le chemin relatif de mon fichier bash lors de la commande java en utilisant systemctl start et c'est normal car systemctl est utilisé en root et donc n'est pas
du tout dans le fichier /usr/local/sbin/ d'où l'erreur vu dans le screenshot lors du systemctl status
Autre problème : Si on lance un java depuis le dossier DOCUMENTS avec un classpath, TOUS LES CHEMINS RELATIFS DU JAVA vont partir du dossier DOCUMENTS (CELA NE PART PAS DU DOSSIER CONTENANT LE FICHIER JAVA)
Donc pour régler le problème, j'ai changé dans le config xml le root.
De plus, j'ai changé le service pour le type simple pour qu'il se relance automatiquement à chaque plantage et je l'ai enable pour qu'il se lance à chaque démarrage.

